<Window x:Name="window2" x:Class="RevitProject.GridsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RevitProject"
        mc:Ignorable="d"
        Title="Grids" Height="350" Width="505" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Background="White"  >

    <Window.Resources>

        <!--#region Labels -->

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="130"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

        </Style>

        <!--#endregion-->

        <!--#region  Buttons-->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Blue"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="HorizontalAlignment" Value="center"/>
            <Setter Property="Margin" Value="20 0 0 0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DodgerBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

        <!--#region Comboboxs -->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="30 0 30 0"/>
            <Setter Property="Padding" Value="2"/>
        </Style>

        <Style x:Key="ComboBoxStyle2" TargetType="ComboBox">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Width" Value="170"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="Padding" Value="2"/>
        </Style>

        <!--#endregion-->

        <!--#region TextBlocks -->

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

        <!--#endregion-->

        <!--#region Borders-->
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <!--#endregion-->

        <!--#region CheckBox-->

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--#endregion-->

    </Window.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height ="*"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Style="{StaticResource BorderStyle}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height ="0.7*"></RowDefinition>
                    <RowDefinition Height ="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"  FontSize="16" FontWeight="Bold" HorizontalAlignment="Center"  >Create Grids</TextBlock>
                <StackPanel Grid.Row="1"  Orientation="Horizontal">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.Row="1" Grid.Column="0">Layer Name</TextBlock>
                    <ComboBox Style="{StaticResource ComboBoxStyle}" x:Name="layername" ItemsSource="{Binding Layersname}" SelectedItem="{Binding Selectedlayer,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    </ComboBox>
                    <Button Content="Create"  Command="{Binding OK}" Style="{StaticResource ButtonStyle}"></Button>
                </StackPanel>

            </Grid>
        </Border>
        <Border Grid.Row="1" Style="{StaticResource BorderStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.7*"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"   FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" >Grids Numbering</TextBlock>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Label>
                        <TextBlock >Vertical Grids</TextBlock>
                    </Label>
                    <ComboBox Style="{StaticResource ComboBoxStyle2}"  ItemsSource="{Binding GridsNameStyles}" SelectedItem="{Binding SelectedVerticalNumbering,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>
                    <CheckBox Content="Reverse Direction" IsChecked="{Binding ReverseVertical,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <Label>
                        <TextBlock>Horizontal Grids</TextBlock>
                    </Label>
                    <ComboBox Style="{StaticResource ComboBoxStyle2}"  ItemsSource="{Binding GridsNameStyles}" SelectedItem="{Binding SelectedHorizontalNumbering,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>
                    <CheckBox Content="Reverse Direction" IsChecked="{Binding ReverseHorizontal,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal">
                    <Label>
                        <TextBlock>Grid Bubble</TextBlock>
                    </Label>
                    <ComboBox Style="{StaticResource ComboBoxStyle2}"  ItemsSource="{Binding GridsBubble}" SelectedItem="{Binding SelectedGridBubble,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>
                </StackPanel>

                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="0.7*"/>
                        <ColumnDefinition Width="1.2*"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" Content="Add Dimensions"  IsChecked="{Binding Dimensions,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <Button Content="Apply"  Command= "{Binding RenumberGrid}" Style="{StaticResource ButtonStyle}"/>
                        <Button Content="Done" Style="{StaticResource ButtonStyle}"  Command="{Binding Done}" CommandParameter="{Binding ElementName=window2}" Width="70"></Button>
                    </StackPanel>
                </Grid>

            </Grid>
        </Border>
    </Grid>

</Window>