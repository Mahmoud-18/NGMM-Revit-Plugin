<Window x:Name="window" x:Class="RevitProject.ColumnsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RevitProject"
        mc:Ignorable="d"
        Title="Create columns" Height="300" Width="350" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" >
    <Window.Resources>

        <!--#region  Buttons-->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="blue"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="HorizontalAlignment" Value="center"/>
            <Setter Property="Margin" Value="20 0 0 0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DodgerBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->


        <!--#region TextBlocks -->

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="15 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!--#endregion-->


        <!--#region Borders-->
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <!--#endregion-->

        
        <!--#region CheckBox-->

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="15 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--#endregion-->
        

        <!--#region Comboboxs-->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Width" Value="170"/>
            <Setter Property="Height" Value="30"/>
        </Style>
<!--#endregion-->


        <!--#region Labels -->

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="130"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

        </Style>

        <!--#endregion-->

    </Window.Resources>
    <Border Style="{StaticResource BorderStyle}">
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1.5*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <TextBlock Text="Columns Type" Grid.Column="0" Grid.Row="0"/>
            <ComboBox x:Name="columntype" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding columntype}" SelectedItem="{Binding SelectedType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="2">
            </ComboBox>
        
            <TextBlock  Grid.Column="0" Grid.Row="1">Layer Name</TextBlock>
            <ComboBox x:Name="layername" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding layersname}" SelectedItem="{Binding Selectedlayer,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="2">
        </ComboBox>

            <TextBlock  Grid.Row="2" Grid.Column="0">Level</TextBlock>
            <ComboBox x:Name="selectlevel" ItemsSource="{Binding levelsname}" Style="{StaticResource ComboBoxStyle}" SelectedItem="{Binding Selectedlevel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="2" ToolTip="Select the level that you want columns to be created at.">
            </ComboBox>

            <CheckBox Content="IFC (Stuctural Elements)" Foreground="Blue"  IsChecked="{Binding Structural,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" ToolTip="keep it checked in if you want the elements to be structural type and visible in IFC format export."/>
            <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="4">
            <Button Content="Create" Style="{StaticResource ButtonStyle}"  Command="{Binding Create}" Width="70" ></Button>
            <Button Content="Done" Style="{StaticResource ButtonStyle}"  Command="{Binding Done}" CommandParameter="{Binding ElementName=window}" Width="70"></Button>
            </StackPanel>
        </Grid>
    </Border>
</Window>